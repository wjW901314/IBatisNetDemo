IBatisNet.DataMapper 1.6.1.0之简单三层

首先介绍Solution的架构，一共分四个项目：

Web ：前台应用； 
BLL ：业务处理层，如果嫌麻烦，可以再进一步抽象出来，然后将代码放置Web层的aspx.cs里面； 
Model ：这个就不多说了，地球人都知道(数据实体类) 
SqlMaps：资源类，把配置文件和sql mapper文件全部打包起来。 
二个文件夹：


Include ：iBatis.Net架构的dll文件 
Log ：放置log文件的文件夹，在web.config里配置

1.在一些特定的环境下，一站式的解决方案未必有效

系统的部分或全部数据来自现有数据库，处于安全考虑，只对开发团队提供几条Select SQL（或存储过程）以获取所需数据，具体的表结构不予公开。 
开发规范中要求，所有牵涉到业务逻辑部分的数据库操作，必须在数据库层由存储过程实现。（银行大多有这样的限制） 
系统数据处理量巨大，性能要求极为苛刻，这往往意味着我们必须通过经过高度优化的SQL语句（或存储过程）才能达到系统性能设计指标。 

2.iBATIS之于小型、简单系统：非常适用

iBATIS自己就很小并且简单 
iBATIS不会对现存应用的设计或者数据库结构强加任何影响 
iBATIS非常适合于有成长趋势的系统 


3.iBATIS之于大型、企业级系统：为之而设计

iBATIS的某些特性使得它能够高效地处理大型数据集 
iBATIS允许你用多种方式建立从对象到数据库的映射关系 
MySpace已应用 

4.使用于任何类型的关系数据库：

应用数据库 
企业数据库 
私有数据库 
遗留数据库 
简单性 
性能 
明确分工 
可移植性：Java、.Net或者其他 
开源 
 

5.何时不该使用iBATIS

当你能永远拥有完全控制权 
当你的应用需要完全动态的SQL 
当你并没有使用关系数据库时 
当iBATIS不起作用时 

DB_51aspx下为Sql数据库，附加后修改SqlMaps/database.config的Sql配置文件并编译才能生效

作者：一周
